mod blueprint;
mod dybp;
mod md5;

fn decompress_gzip(gzip_stream: Vec<u8>) -> std::io::Result<Vec<u8>> {
    use std::io::Read;
    let mut decoder = flate2::read::GzDecoder::new(gzip_stream.as_slice());
    let mut memory_stream = Vec::new();
    decoder.read_to_end(&mut memory_stream)?;

    Ok(memory_stream)
}

fn compress_gzip(memory_stream: Vec<u8>, gzip_stream: &mut Vec<u8>) -> std::io::Result<()> {
    let options = zopfli::Options {
        iteration_count: std::num::NonZero::new(15).unwrap(),
        iterations_without_improvement: std::num::NonZero::new(u64::MAX).unwrap(),
        maximum_block_splits: 0,
    };
    zopfli::compress(
        options,
        zopfli::Format::Gzip,
        memory_stream.as_slice(),
        gzip_stream,
    )
}

fn main() {
    let test_0 = "BLUEPRINT:0,10,1303,0,0,0,0,0,637859821645895869,0.9.24.11286,%E6%9E%81%E6%85%A2,\"\"D9DFF5FE1B596D34946DC60BD42FAA36";

    let test_1 = "BLUEPRINT:0,10,1303,0,0,0,0,0,637859821645895869,0.9.24.11286,%E6%9E%81%E6%85%A2,\"H4sIAAAAAAACA+2dBXhU1/ru94RAUqBACdS9hQpOkAiQ2TP1Uso5p67hQIEacuoOFaCOu0Nxa5FkglepUZzi7u5WmLvePXn3fKzmu5Xr9595nrd9dx7Wb77la68tE3Acp4xRihE+VxlVzPcBJ+o482J/Nn88Zf5t/2g06uBTwnGCjjPKDcy5aJr0IzqsqQXh32xOquhE8z+lSpcuhb89kJjoyI9hetBA/oHrOOVCAEk/YHz/uhD+zeKkCj4USQgCJCEGaecmOHOCSCi9/NZosisg+NQmywMVgUlygm7AudINdL6orvRro6lhCP9mYdI1Tg0AkQUrmkSYsk4ZNwC1aZ4j/SEDgAgpqkCKwpyJlnZRHsiG9HWdpDBESHUFUixWLvvde5dXdqsUaZclfYJTKwwRsswkvRiEhLMhSTDnoTCdXC8L0l9qABAh5yiRJMPsiM42CUd5CaXnP1Tajvkk+jTZds7BwWkD2tNjktvlwcczpU81UUGM7AolsuIw87+JBmcsWe6mNs2tJ/3yualhiJAyCqRELMjBfqOj/+MGWPOsBlgSxiT0E9P/MSj1LNC5MEWcxn5ieht0JrmBBHkQCSoFU9xZH/QSzxtXV3odFPt6CSod7+llQqh26Q9WmJYOsacHlIIuA7MvGjVtZ4GLhNIv+DE1DLG2ggrkPJgbBkSDLXo4oSeal68n/VUnJochRnKt+f8HjuwWCU6JpDisLMxv0dauGXOCiEJ6x5kSghjRpUpEKTCXm4Idc90VtVFD0jcekxiGCGmtQMrFGuGVXjXj26X/79dU5lk1VR7maHRdkOON9JUCU0IQo9HG5PM5bJipxBs+pXecjmGIkCwlSxcQgjEY2ZD+lBlGIULSFciF7AqJTjCIb5delkuf5MpWucQhF8E0jt7tjcHtU7+LXGAgg9qsCLbdWml6N4wzkPmsSarkoPO5KJCoN5fC+YPWxfFukMwJz/cn+85oALHxVVCydAlMKVMObGjwWqMLK5BLYYphpkRC8+3SLz0zOQT9UTVflj/yBaPR2S6GBOlPRyeHIEJqKZFcHuvVb7kro28F5/YJ5yGSConDg20rpkzv2nxMnXMfSklj4WKyR+hJBRTuFZxmknuNdgM1d6VJX87UEMRoMCcVlKUrYZZGs8woF/QamvR/tr1cBZPslPEKdMqZaAPpE0ztQIzkEqVcroa5IXqF3+jQowej0TWvMr271ejQ/asrje4armvYi6WvblYSEKNxlWiuhWnQMxocVS4xhNlR+v80n9EAYsu9WIFUiDf/kmz+vq/5wlc5ECGlFUhFmHvSnwueio40Vbs4TfqcMx3CELPTzfy/J760yNmQ67h6cJxfvXKQ/s9W8/UwLc+sC7KGMDt6w0LFStN7WDWEqbS8UkM35HcBr+9gYJLe7keXKeVyI6eRgDPPa63Sn4p2CEOEnK9AKrGG0FpXnXkrS/qoiQIi5CoFUjkG6e0WyR9npQ+bcQX6o7GlCuchDkrSRx5uGoYIaalEUpXZuedkSgg15Cwp6544nRJq2/za6feYTnh01uQQa+im/BCKFFBD1TgXAYYClb6V6T8QoymvRFOdAzcTSn+9mVahPyqXGvHeXMZrH9LfZBocRMg1SiQ1YzbbH/Glt6eQsgokleteDtzw3sDdvOz0DSem12099EJ/4MYiuTYHbnxE4dZiZww4c7yykH5MjaQwxGiSlGgAd84xETAb0i8zDQ76o8KtA1PUmecVKBLS/5VhoS6XHPx2eK1wayrZSYMpYRKVf2qQ26XPY5nSn0xtkgER8qkCSWer5Qmo9EVNO4EIqaZAMmLVnOs3MuntIaGRAsmEKTE7Gqy/eK2Llbb0hw+khiFCinPVXSy+6t5VJA6rxy7AQoXXCriuElF9ji/NQ89mdbkoO1P6dFMuECEpCqQBz4+6fLo1K9AnkC79YrM8hQjBNz5lZJ9jZ3EVhcEaWZDeXiyHlEiCPDfiiC/9jfOzwxAhNyoQly2XqwPpbzCDE/RHfSjEyYxZkP6RtHvCECE3KJGEYY5Fq/nVCq9VcT0FclPMVncD2FLCel968RmanKb25ptjZdLZn8CkD5goIEZSWYnkFvYhrzDTFucI/6dH/lu50cVvl/6M6YQQIfcrkdwWW/e38RNKbxfsrQrkdk4fTCj9TJMViJDbFMgdHLA5A0pvR3KnArkzNhSM8hPCa5CGCqQhzKnoRD8hvAa5RYHcxaFgytCSwY/NFpv0n9WflwER8iSHgsDZkEax7Mzxx1fpZ5tChf6ondwNU930l5ZOdhANTPq2BgAR8g8lO425hmM5SL/cTKUQIXcoEMCdOtEs79uRUHr7POg+BfJPmNa3PuemmoRz+zTMm218PbPMaJ86PXJ93U11F6RVypTnhw8YJYtlRkI+6F84/EfuI+4rn44woFvyZhn/bTTL+Pp52WagThTLdTTxcxFRsd+D7sHhP3Mr54NuzxtifG0THTxAjgChNsopoHtxmB593G2RXybS2w3vAaV87oOpaTYnmiNh/4typbfn53sVyP0wJ6Md/V4svR3JzQrkAZhK0dbIgtfYpP/UtBfoj1rvgzCRNieCKFysKm9qeyLIFSYKN2rEwm2BBXV+4SZaq8qHcDhiWB+/itcYn+m1m7mR50+dm5P9uGk3YnlaWWk3D8f+MMnviNLbZZOhlM0jHKiYEF6DPKxAHuWKGwmxxyK93Z8eUSCPsWfz26W3IY8qkMc5KzIhvJadxxRINhsdl6TS25E8rkCacFbkMl36m0yDgwjJViD/5m7YulOrvH2np/IhOGe8+Y4L6xxd9sh0thV8YwJAgd+3laasIYBwHgRf0gybGG/SXm9ea8Ylc9MIwrBZIh8UtVpvMxzOHBbxE68yfp6BovXiys39ohvgwoG3xCjg5OoJHB43ewnnOWUMKJiHKcWPTmxSENTI2qRg1ppzguN2gPT2OFNJKWh0WOTZX8tJP81sUECEVFEgLbl0f3biTUFc7pG+mskORMjTCuRJZufCzJuCP7dqlyX9sHpFpkGENFcgTzESM/h4WZD+7Ctb1xV4ZUt+CH2a0Aa5JYPYu5R+s6l2iJE9pexjPsO1L/6L/iS93UFfUrL3LC8q4GoEEkpvQ55RIK24GcqE0tubW88qkNbcyGEWpLfXvq0USBtWOb69X9S0YOE/u6xpGCLkZKBgSFtCJqe0zqrSul2W9Mmm4UGEtFEi+Q8hI/K2Zu3BYlH4igYAEdKWi0VrD/M5LuXNwJWFLEh/1+HUEETIq0okzxOC/6MnSz9wW2oIIgTfCEiCBXmB5wMsTOmLmjYCEfK8EsmL+SefJuGg2mYHOUt6u7G9oEBe4tYAG5j0diQvKpCXYc5EP/ULU/qS+1JDECFvKpBXYKLRjn5C6e3h8mUF8ionN6Ms1Ij0drN/RYG8FivYBS5qBQOT9NuXpoYgQv6tNPvXOeHzQpP0GcmpIYiQt5RI3iAEF+BWooqF/+rf49MgQl5XIG8SgnEWhSl9iXc3pUOEvKFA3oo1+95uQn4WpLcbW20F0i5esI39gqVvdcHyCETIawqkPSEBJ+hD6E+VmBSBCGmnQN6GSfYSVvcSSn/f3O8iECHtFcg78Uiu9COhX9hkeTpEyNsK5N1Y3/nFXwxKP+36xRGIkHcUyHuE8IRT+sTlH6RDhLyrQDoQkmDGVmRB+t0Hq+VBhLynQDqyTHj3hPRL9gTSIUI6KJBO8UgG+5HQv3+ydwZESEcF8j7MsTPfum+a8yIsAgFp0xnnSFfnvWta6yAjruPwjSUBKvr786IP4jcX7feqVnpHfNKSaxa0K5a8swhwMV3ZyPE/O5S/71L+XiKp4L8fVv594afw8//CJ2CU+D+Yvog8hqzjBOu46P+23BV+ht9pNoyvKH7SubRRKY5R+H8zT/CFn8JP4afwU/gp/BR+Cj+Fn8JP4afwU/gp/BR+Cj+Fn8JP4afwU/gp/BR+Cj+Fn8LP/xsf3o3wIcxG780Avb27j6Uv6nQMQ7yl4SvlloaPYPBcGxLi7gPp+5+qmwERkqZAPob5LhrN4vOy0r+dkRqCCOmsQD6JReLg1SZeQukPVW+dBxHysQL5lNk52XKE98y59G0qlM6DCOnpFHwrXWeY09Es/zF66e0bk25QIF1gOvWP+I9FSz/ZPB4NEdId93QY2bcXdoU58m1JJPSyIH3DQMcwRIijlEk3mApOMNjIJMSji9KfiXYIQ4R0VSDdYfZHB/kJpU8wDQ0ipIcC6QHzTNMOfhakv8NkBfJrR4H0ZBXz7TXwf+VNNvwEBLQXG9/eHpO8LEl/55z2EYiRfaJE1psQvvBA+hs7B9IhQnoxCgvSB6Z0+9PBu1C45mZq6QMfPBSGCFmhRNI3PxLXQU9GGQl/x47sMETIhwqkH4y5bzOHr5iSvtXCgWGIkAkKpD/MD8nPZCELeKxT+htMm4EI6adABsCE/7M1i21F+stN64UI6Q9TQF8aCIP7rPbkV6v0JT76KAIRkqNEMogQVqv0k2dVzIAIwTd+b2RDBsN8XiPVPZmfBeld0wUgQiJKJEN4gHc3sOnTz7jtmQhEiPagz9A4JNmH0NeMXJkBETJEiWRYHJLoQ+gHHuuQCxEyVIEMFx3Xh9DvXNIlHSJkmAL5LN61j7uE0H997fIIRMhwBTIiDtnvQ+hnl+iRCxHymQIZGes7g0zi7V5C6Xt1aBeBCBmhQEbFI1nvR0L/VYvVEYiQkQpktON/fvUh9GsvviwPImSUAhnDA77pSfrfeneMQISMViBjecBHoqW//NuRaRAhYxTIuHh25vgQ+o1tFqdDhIxVIOM5svEtatJ3LtInAhEyToFMiGdnkjckSr/5tg8zIELGK5CJXGqgbWChI/1ZC77kOurj0ZMICThlQnjOT/o/C/mcZTKw3wbvYadi14/Iyhqywcw7aZkrzdOqGYvir+lA2GgrCVEngBlV3tv6Bal9fyoZwgOD9/UanlV3QclQlwdrZ35jHgRL/ToOQuhDCMJHgCbjEA8gcM6RXkT/l15ZN4XQ3WbkxxwkfRmnVhhireUptTYV5mT0CpeLQunPM4tDiJC5ygJxGszK3u1dTmTSNzIzAETIFiWSHM5HXChLP+OugekQIbkKJBfmsEnIJbv0Pc3SHSJkqgKJwHgPOHEpJvxvK9060F9dluWxtjjFnu1rhSFGhvZS0CQ3HQZPTfEFCNIP+y4lDPnZU2prBgyemsKoh4TSz4+mhiFCtiplNJMFffWSte73477PlH6fAUCEzHHy38CRREiCg9u+CZsVy1Yn926splY8mim9vayfpkQ0G+ZE9G5Ut5cV6d8yr3yBCJmnQObA7DRZ6bl0uZt6yeB60tsv7ZyhQOay/bDhSW+fdH2tQL6EqdXiE/dk/omW9HPMCRdECApwdQELxa9g8JYWLJjxVIz0dsGuUyJBhN5DUBwWpD9inhiCCJmtQL5hy2VDk37+L8XCECH7FMi3MHi0hm1DevvMba0C+Y4dEeWAGpG+vOmEECFLFcg8H5I/1Ur/q2kjECFTFMj3HPE4tkjftfzK2pDj/LWX4P6AA7yqjlsF0lc2WYMY2QKerFvvkPkRJvbapE5eNNL/ZLIGEfKD8ozXTzB4woyjnPR3XJaWARHys/k/ZgYb8jMhPIOVfu9XdfMgQhYrBT2f2eF5o/Rfm6xAhGxUIL/A/Gt+Q39ik36q6YwQIb+a/08uoEMuYO3w3UvSp5magQiZr0SyEAbP/3mdsFmxNOmPmc4IEbJGmQUWweCNYY3y+4/09muClimRLGbtcJ6WfuH+ZRGIkCUKZAkM3tjIIVL6humpIYiQhQpkKTtkwOnsd0j60qZQIUI2KZBlMBNqpPhnsNLfZdYwECHfK5DlMJVbDPTbhvS5po1AhGBEO1RAO/k1fx0cG90uejRT+kRTMxAhg5VIzJYKn3Ie7C0Kpf/x2xphiJC+CmQlTOP5lf25R/qIyQpECBpVpIDsrIqtMge5fA2b9LlmXoYI2axEshom2VQph0jp/+5u2RoYPJDLBie93ZfWK5GthVnfu4tfLtKHTZuBCFmtQNbB4F1dnIukL7OlQxgi5COlV6+HwZ4352fp7eysUiLZABOeX9Jv+tJfaVYMECF9uDNkVflGLj3YCaW3Xyz4oxLJpniv7sTzJt/fawAQITOUeWgzTNQ0OJ4WS/+bGfkhQg4qkWzhSMftWekdfv7iXL2VCwAu4aWfZ7oExMimK1W+zSNedqXrvWj8ztx60qc0qBWGCPlGyd52mBevvNJtgJfo1SlfT/rypWqFIUK2cTmfHF/O7xDL+R1czjtY36ElC7+zXlIYImy/EtFOGLxDBQnReqU/xyygIUJ2KJBdMGWcNrGVJvqR9AYAEbJTgeyGORp93E8ovf1emV0KZA9bMhNKn2gAECG7FchezgpMKP1R07MhQvYokH08O2GNSG+XyV4Fsp9LELyFGzUivb3KXKi03AP5I56/KJR+k+mUECGHlFPig4TwZf3SX2migAg5oGTnECHck5H+r0wtsncfZpWXw/rOTLnS7zRZgxjZd0pkRwjhEl76i0zWIEIOc9VpLeePwpzjZamTV83S7zFRQISMUobRY4RgECeEfocBQIQcVbJz3C/o/Iu70tu/Z3FMgZwghIUp/XmmPCBCjiuQk4SwMKWvawAQISe4TLMK9hTMRm846O2tvqWPmlkSIuS0EslvMAejrf2rWtJ3MVe3IEJOKZDT3P3g2b309nL+jAI5A3PIjClcdsBrS5Co0qujMHi/JhNKn7Hh4RyIkESlsXlHH81phTMSrydL38RcNoQICSgQ/B2jP9a8Xk+W/qRZ+0KE/KaUSQKObpv/ur+El95eDCHplgIWQ0VwhHH2BBqYWRRKv7f9hXkQIRGlYBMJKZd/vij9oVe/TocIKaKUSVEcBZxf0XO9Uz3pXzBb2hAhzQIFR1IMR/g1EW7vS1/cTB8QIRWUSJJwhNfWMaH09stoKiqQZBzhPIAvoJH+zfJfRCBCyiiQc3CEdT9eccIX9NC/1n5AGCJkogIpjqOTLbe5H5jmjhqRvpTpfBAhVRRIiVgk2/wzV/q/8nMBJQEpYa7yHVj4iIs3B0t/3IyvECN5L2C6ppE9sp2Lo3cHn3B7Dmvvej+jYCBPD4VPybv3dIdwWZMdXvq4xvzjmsjSOb+/9FEKJvbql8ZegUpvD0zXK+VSGkfRaI5XFqha6S9NSQpDhJyvQEz1851Dbbw35Ur//ZKa6RAh5RTIeeyE/HbpTyeNSYPsIdKGlGUkKIdap6MNpG9y4Zg0iJBkJZKUOKQTs+P71zd2z4MImaD05HJxSDuvkUlfr8aidIiQFCWS8qwd3mwl/flmGoUIKa1AzueYwuYuvf1i5FoK5AIcfdtyr3vGdDyMrdLnmIEaIqQ4f6TKGqwvZP/JPNDI/di8hk16e8mVqkRyUWxg2o5qNWNrdqb0A0t0CkOEfKxAEJ13vT4BjcwrB3r7pPP6P/0+wEsAxWKHI5z0doccoUR2KQdvJoTXIJcokMtiR5P8hNLbq6dLFcjlsezk+gnhtUguUyBXcFZkQngNcqUCwd/51iwvIbwGuUqBXBU7micSzlMhVyuQq9mXmBBeK9jLFcg1OMKoz+FAevvNhNcpkGs5+nOJIb09yRdVIBVwVNyUg9ns8FYH0tvLjUcVSEUc4U3cXGJIb5/FV1Ug17FMVlVq651tSL/ETKsQIbUVCCY571chOAvCazPiYAVyA1ssE0pvV3EpBXIjjnAthO9dlX796dQQREhzZVlaCUe4cZGzoPQncnNyIXvf0o6kMo7wZn9eZJI+8OGXdSBCKinZqRKr4nVeU7+4tZMl/eumUCFCrlAgVTmesG1Ib1+8LaZAqnGMZULpzzcAiJAkBVKda1uePEm/slapDIiQNAVSA0e4TMpvl/6Q6XwQIdUUSE0cGYW49Ur/xz8AWN9LSVAqJ7TvSrnus+bNuNIXN+MJxGjmK9HUig+Rnb3VtfSnTHYgQq5VILXZk0tXbeotjKU/ZnoxRAgWyAX+vgtXCqUe+sQsjK/IazbohLvqYfhb8n42Vdz0aPz+IBRiL6MSBdwfVJdVzXNC6fvN310XYjSrlY6YRgjPCaV/v/I1aRAhdZVySSeEbUT6JJMliJAaCiQDR9gRTEBC00akt9dy6QokE0cnom/53y79b6aKIUIyFEi9WDW38RPCa5BMBVI/dpTtJ5TefvdqPQXSAEfnOo29hNjtkv7iZZNDECH1FUgWjtYsC7ovntzm/aio9JsOTw5BhDRQIEEcVZxS0/3izDZvf1/6gelTQhAh+EZvr/8cQhK8NyoS5sbm5vV+Q5O+2+JJORBhYSWiEDsjN/GkL2GGBIiQngokzEhO5G/iST9p6qcRiJDGyvnQTVw5cfNX+rEjZ02F/uqK++b8adZt1nGSi/eBS39+nXvSIEbWQ8neLSwj7lFKb296okBvLeCs/lZCmCXp/+4+922Ectdd+kVmGIUY2e1K9m4nhPv/0tu/znmrMh7fwUWRucvH24KV/ogBQITcqzSBO7lk5dU96f+ojC4oWnAZNeTEx+uO0tvXAm5Tyugu7g7hJmGMPdIfNmMQRMg/FEgjHG3svSF/D3N6mvT2terGCuTu2NF6/0q59PtMFBAhdymQxuywvIYv/N++no9sm93nff7dBdK/Zy6nQoysoRLZP3FUtcVef59X+mnmfgeIkAfY16xthH/F5q9f/HKRvpe5DRXyG6MSyT1sjLypRvory/SKQIT8S4Hcy27Be4SkL2KmYoiQu5VucR8j4c1X0keyt6dDhNyjRHI/IezZ0k94bW46RAi+EZ3RhjzArRXeDyO9fRdgIyWSB3FUp8Vav+lLP91UL0TIQ+YfNy6gih9iwfLb4bVIHlYiwd+dDb0X+g1M+jtNZ4QIuVOBPMJIHK6yhG/QOCkMEZKtQB5l7XBtI719L/gjCuQxRoLr0mxs9BeaOQoi5A4F8nhsxlzuOkhsEkq/2gyVECGPKZBsQhLynzORvqSJAiLkcQXShCMdLypI//a61BBESAsF8m+WCRNKby+qmyiQpjgq6n17b6/TSf/FN/UzIEJcBdKM2eH5kvTz3nYzIEKaKpAn4pBO3kaO9KMHXpUBEdJMgTSPQ9oxEt9f0+rdXIiQJxRIi3iZtPEKU/pmKV+kQ4Q0VyAt8+ehILZPsHkuvb0f84oCeRJHK3vP9XsuvPY86E0K5CnuPZir7W4Vp12W9OdWG5EGEfKyAnmaECwxCKFf+F7xDIiQpxTIM3IXhBD618c9lAER8rQCeTZ+XWC9l1D6mxIqRCBCnlEgrRgJuj8jod87q1c6RMizCqQ1tww4OEtvV/GTCqQNjiq1mO9Xq/T2L0W35uRlTRltA/4tPI29gUh6e9/uP0ok/+FFKCaU3s7OcwoEf/fuyGdTl96evDoqkOfjtVMmhG+X/qFdWRnQHz26+QIhCfnPfEo/9tmZEYiQ55VIXmRj4+/fSx/+oE86RMgLv4MkmKV7HPZSvOUmhvAr69I/Vv6jXIiwF5WIXo6XjRNiy6W/Y16xPIiQlxQIxhvvNkpWr/QBU0MQIX0UyKs8q015Ksc7K5N+d4UWYYiQ1xTIaywTLD9ZwPRrzu0Uhgh5R4G8zlPh+7uPdvFTltKvKLkuDyIE580YKm3IG8yOY4RvF/5v/0zWm4SOfXqWF4309buviECMDBEAWsT+HRhCjrec5Q0L0v9s1iwQIagVgOyT9HbxljzYW3pJP8fcsgIRUl4p6PY4ujU7x+UD6tK/Y26egQhpp0DextGNLWb5o5z0V5uBCiKkPWvLGvHe4VU+thXpJy7ODkOEvK9E8i6O8OQ/mz68NuK1VCDvcbu2wpJG3nVY6W+/pUUYIuQiBdKBlzv47dIffXtAGCJkmALBcOrd+MvxVno7O+8qkE4sWLYN6bfefyQE+VWsnNa9z8tifNxX+nJmgQwR8oESyQfxSEYxEt8fNk0eIqSTAvmQQ0PTjvP8XTL6sec3yoUI+UiBmL/zF28XeJfCpH/qo/5hiJDuCuRjLk1RI33bOFnS22PuDQrkEw4F93Wfy/HE9/u+WJYLEfIhh4KA9Q6YAG89ZgODV5p9NyWSztwDZ0J4DfKpAunC3XgmhNcgnRVIV14XYEJ4bTLrokC6cSOdCeG1FVRbBdKdYyzbhvTD+w0IQ4S0UiA9WMUDX87xWqn0TVdlRCBC3lQgPbkzGDuVa5Ip/XbTbyBCeimQXoTwhhnprzE9GPqjZVjv+OZwttdzpW84YvZU6K9Oq30AxQt2OLpJb9dWByV7fXmXEhPCa8NlVwXSL1ZGvf22Ir0N6atA+uMINz4zofT2ormfAhnAm2eYEF7rBv0VyEAO3EwIr2VngAIZxCUqEmJtK71dOwMVyGCOubz9QHo7kkEKZAinVd5hIv3mZRXTIEIqK5PZUN5FgC0AJJS+1e6y6RAhQ5RIhsUjyWYkvj9aYU4EImSoAhmOo024+QwTe59z06VfbAoVIuQz84+XFLBywt+d8U9ucyMmIdZt0hc3hQoRskCJZARvAOD9P9LbtXOOAhnJ+xlQmLijXHp7K22sAhnFvoNqxZgivf2kxkgFMjrW2IL+bxpKv/xEdhgiZJoCGYMjPEjBhNLbzX60AhkbL5NsbzNCevsNCOMUyDiWCfuL9PZtCOMVyHhGgiwgofQzTmWHIUKmKpAJvAma04b0x2oHMyBCqiuQibG5ubP/7dI/1XhEDkRIWQUyiZfbWSPS2y12jAL5nIueBJMQWZDehkxSIF/gCC2U3y69DflcgUzGEX6KnAmlt9/B8IUCmcLbMpAQv2ArvR3JZAUylTMga0R6GzJFgUyLd8DqXs+V/nLTgyFCimjvemEH5EAk/VWns8MQIV8pkeTKXoxOJ739DFqOAolwNclOJ/080/kgQnIVSB6O8MANu7/09htVIgpkejySNl61Sl/HZAUiJE+BzGCZOPnjqvRbTRQQIdMVyEzeFshbjaX/3IwlECEXKFU8y99Vz08ovd3YZiqRzOZpP74diz3pbcgsBTIn1nfK+AnhNchsBTIXR3hFArMgvT1lzFEgX3plgkRGWGJJb0cyV4F8xQ7I/iK9DflSgXzNKg6YbCCh9IsCSWGIkJ8VyDeynfD2UXr7Yb6vFci33ODkQCT9XgOACPlGgXxHCHuu9DeYfgMR8q0CmReHZBPi+x9NFBAh3ymQ7wlJcNp4j3NIbz/TOk+B/ICjCiYhF8Bn+1phiJDvFciPbPaoViSUPvRNsTBESKLSi39iB0RCtFLp7bthf1Qi+ZlDARuY9PYNmz8pkPk8xZ1wfapbxeyhSJ9iygMi5GLlBqFfeIp7z/JH3D0mofT2a3su5KNR9jtc4rcZl3FX4jZj4RuazgcRsljJzkJea2c5SN/cPG8GEbJFgSwiBN9OCP2r7QaEIUIWKpDFvDjNhNLb48kiBbKEtcPf5pb+7z6pspTQ8denuHcltsuS3r6da4lS5csIcUzhYmNG+rKmzUCELFWytxxHeI6VNST9dFPIECHbFMivHLiRECsD6e2CXq5AVnCC57dLb0N+VSArYx0y208Ir0FWKJBVXGEzC9LbkJUKZDVX2Px26W3IKgWyhtuKTAivQVYrkLXcY2JCeA2yRoGs4wqbCeE1yFoFsp6nc0wIr0HWKZANsb3JUX5CeA2yXoFs5L4+E8JrkA0KZBO3WpkQXoNsVCCbucfEhNLbW2abFMiW2MD9nZ8QXotkswLZymvvOJnEQkf6ucGJ6RAhuxXINkK4bpM+p+WYDIiQrQpkOyF8Tkb6ITnlMyBCzlMgO+KQdt4ZqfRNm3SOQIRsVyA7OTzy1hvpN3zbPgMiZIcC2RWPJNtbXkjf8InsHIiQnQpkdzySxl6NSF9nboc8iJBdCmQPp4wXN54O4qFP6U9ltQhDhBxWIHsJuWd5SX/yol9pJi6IEHzjkgIuBe/jlSguiKU/YC40QoQcVSLZTwgbmPRrXromAyJknwI5QAhHeOmH3zYzAhGyX4Ec5O1aWBkgofS9n2hdGyLkgAI5FIc4XhakL2HmYYiQgwrkcGy03+4lxEpA+gcOdgxDhBxSIEe4/GKNSJ9efXgYIqSUsmd9lHcpMqH09qB0RHs3C886ijjBIJq69J1vapkHEXKjAjnOs46ijuMlPMv3mxmBCDmmQE7wnLCYqVIklH7UODcDIuS4AjnJ7JiXONdGOUh/yjR5iJATBUD+G9g/G/uSqgAA\"C345EC029309E8DF396DC806ED2A8B";

    let (_unknown_after_bp_data, bp_data) =
        blueprint::parse(test_0).expect("Error: parse base64_string");

    use base64::prelude::*;
    let gzip_stream = BASE64_STANDARD
        .decode(bp_data.content)
        .expect("Error: base64 decode");

    let memory_stream = decompress_gzip(gzip_stream).expect("Error: decompress gzip");

    let (_unknown_after_content, content) =
        blueprint::content::parse(memory_stream.as_slice()).expect("Error: parse content");
    // println!("{:#?}", content);

    let memory_stream_out = blueprint::content::serialization(content);
    let mut gzip_stream_out = Vec::new();
    compress_gzip(memory_stream_out, &mut gzip_stream_out).expect("Error: compress gzip");
    // Fixme clone
    let content_out = BASE64_STANDARD.encode(gzip_stream_out);
    // println!("{:#?}", content_out);

    let bp_out_1 = String::from(bp_data.header) + "\"" + &content_out;
    // print!("{}", bp_out_1);

    use crate::md5::*;
    let hash = MD5::new(Algo::MD5F).process(bp_out_1.as_bytes());
    let hash_str = hash
        .iter()
        .map(|x| format!("{:02X}", x))
        .collect::<Vec<String>>()
        .join("");
    let bp_out = bp_out_1 + "\"" + &hash_str;
    println!("{:#?}", hash);
    println!("{}", bp_out);
}
